@page "/edit"
@page "/edit/{product_id:int}"
@using BikeStores2.Domain.Models
@using TabBlazor.Services
@inject IModalService ModalService
@rendermode InteractiveServer

<EditForm Model="@product">
    <h3>Edit Product</h3>
    <hr />
    <div class="form-group row">
        <label for="product_name" class="col-sm-2 col-form-label">
            First Name
        </label>
        <div class="col-sm-10">
            <InputText id="product_name" class="form-control" placeholder="Product Name"
                       @bind-Value="product!.product_name" />
        </div>
    </div>
    <div class="form-group row">
        <label for="brand_id" class="col-sm-2 col-form-label">
            Brand
        </label>
        <div class="col-sm-10">
            @* <BrandList @bind-SelectedValue="product.brand_id" /> *@
        </div>
        <label for="category_id" class="col-sm-2 col-form-label">
            Brand
        </label>
        <div class="col-sm-10">
            @* <CategoryList @bind-SelectedValue="product.category_id" /> *@
        </div>
    </div>
    <div class="form-group row">
        <label for="model_year" class="col-sm-2 col-form-label">
            Model Year
        </label>
        <div class="col-sm-10">
            <InputNumber id="model_year" @bind-Value="product.model_year" class="form-control"  />
        </div>
        <label for="list_price" class="col-sm-2 col-form-label">
            List price
        </label>
        <div class="col-sm-10">
            <InputNumber id="list_price" @bind-Value="product.list_price" class="form-control" />
        </div>
    </div>
</EditForm>

@code {

    [Parameter]
    public int? product_id { get; set; }

    [SupplyParameterFromForm]
    public Product? product { get; set; } = new Product();

    HttpClient httpClient = new HttpClient();

    protected override async Task OnParametersSetAsync()
    {

        if(product_id is not null)
        {
            product = await httpClient.GetFromJsonAsync<Product>("https://localhost:7217/getproductasync/"+product_id.ToString());
        }
        else
        {
            product = new()
                {
                    product_id = 0,
                    product_name = string.Empty,
                    brand_id = 0,
                    category_id = 0,
                    model_year = 0,
                    list_price = 0
                };
        }
    }

    protected override async Task OnInitializedAsync()
    {
        
    }
}
