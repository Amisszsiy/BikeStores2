@page "/productsummary"
@using BikeStores2.Application.Services
@using BikeStores2.Domain.Models
@rendermode InteractiveServer
@inject ProductService _ProductService
@inject HostEnvironmentService HostEnvironmentService
@inject HttpClient HttpClient

<PageTitle>Products</PageTitle>
<h2>Product Summary</h2>

@if (products == null)
{
    <h2>No data</h2>
}
else
{
    <QuickGrid Items="@products.AsQueryable()" Pagination="@pagination">
        <PropertyColumn Property="@(p => p.product_id)" Title="Id" Sortable="true" />
        <PropertyColumn Property="@(p => p.product_name)" Title="Name" Sortable="true" />
        <PropertyColumn Property="@(p => p.model_year)" Title="Year" Sortable="true" />
        <PropertyColumn Property="@(p => p.list_price)" Title="Price" Sortable="true" />
            <TemplateColumn>
            <Button BackgroundColor="TablerColor.Yellow" Shape="ButtonShape.Pill">Edit</Button>
            </TemplateColumn>
        <TemplateColumn>
            <Button BackgroundColor="TablerColor.Red" Shape="ButtonShape.Pill">Delete</Button>
        </TemplateColumn>
    </QuickGrid>
    <Paginator State="@pagination" />
}

<BikeStores2.Frontend.Components.Product.BrandList />

<InputFile OnChange="HandleSelected" />
<Button Text="Import" Type="ButtonType.Submit" BackgroundColor="TablerColor.Indigo" OnClick="ImportFile" />

@code {
    PaginationState pagination = new PaginationState { ItemsPerPage = 10 };
    List<Product>? products;
    HttpClient httpClient = new HttpClient();

    protected override async Task OnInitializedAsync()
    {
        // products = await httpClient.GetFromJsonAsync<List<Product>>("https://localhost:7217/getproducts");
        products = await _ProductService.GetProductsAsync();
    }

    private IBrowserFile? formFile;

    private void HandleSelected(InputFileChangeEventArgs e)
    {
        formFile = e.File;
    }

    protected async Task ImportFile()
    {
        if(formFile is not null)
        {
            var content = new MultipartFormDataContent();
            var fileContent = new StreamContent(formFile.OpenReadStream());
            fileContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue(formFile.ContentType);

            string endPoint = $"{HostEnvironmentService.GetBaseUrl()}/import";

            var response = await httpClient.PostAsync(endPoint, content);

            if (response.IsSuccessStatusCode)
            {
                // Handle success
                Console.WriteLine("File uploaded successfully.");
            }
            else
            {
                // Handle failure
                Console.WriteLine("File upload failed.");
            }

        }
    }
}
